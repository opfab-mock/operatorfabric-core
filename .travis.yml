os: linux
dist: xenial
addons:
  sonarcloud:
    organization: opfab-mock
    token:
      secure: h28FCho3F42lakItF1yVFR8tW8P3RPYmGApp6dfKx8RcD2CW6FOwFV+fDtoc8nRFvK448EBmz8fuCfA6Xuw39jo1EatJojesUMMWdAzFDWlVATAfU58G/40BeeCwsj9er7kHCCmGrVwHxf4zob9NxoMqacqwv4ywzhvDK2C2CmxlIMbbGVqQKvRh8gV4XI0qHDme1NpZIQrQFqGcQ+ChmBak3VCQwtfSYYujoVC93iV8XI4J+F0kkg+lMLtPPZ39tM1dTCFqBR+0yrEZcO8IDcToKyRYg0h6daJu7OMjAjobtMJBDUo9N4OAevArwltVqvOdy1hDvUXpYn+TPY+okyeLWgM6vtI5T+XxfRMAK5oYg4Sc8z/ip71kiZzuS9nftmDywpfyYB8kqYM94LFHA9Evmi7gBQ1kKJVw2qcOUxhcnZ5oQJD0scHMlW1g5HiVEZMpoZjUm/GRSY5GeBt4KU5fGqtU5iKvQSJvT/H6h9L/MG+T+zfNlxEyBiJdDGhguD+omsJh2ZFvoAcHDKGeEsfCbPLGu3YzoLohofvds94pl/Ai8108xZW/VI6PpJSbU20RgHs+tPnsbtQdN5LNNywoGNcWHHbIgSc4ExZMIpxXuxPKeO/GjPw8Ou2PQkoj5aK0TnMnYyz+vo9PQNdfQ2lvTrc5t1m+vqRQFmDqFyA=
services:
- docker
language: java
if: tag IS blank
before_install:
- export OF_VERSION=$(<VERSION)
- export GRADLE_OPTS="-XX:MaxMetaspaceSize=512m -Xmx1024m"
- export SDKMAN_CONFIG_FILE=${HOME}/.sdkman/etc/config
- "./CICD/travis/check_version.sh --branch $TRAVIS_BRANCH --version $OF_VERSION"
install:
- npm -version
jobs:
  include:
  - stage: test
    script:
    - echo "$DOCKERHUB_PWD" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - cat /home/travis/.docker/config.json
    - docker-compose -f src/main/docker/test-environment/docker-compose.yml up -d
    - "./gradlew --build-cache copyDependencies test"
    - docker-compose -f src/main/docker/test-environment/docker-compose.yml down
  - stage: test-sonar
    script:
    - echo "$DOCKERHUB_PWD" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - cat /home/travis/.docker/config.json
    - docker-compose -f src/main/docker/test-environment/docker-compose.yml up -d
    - "./gradlew --build-cache copyDependencies test jacocoTestReport dockerTag${OF_VERSION}"
    - rm -r ui/main/node_modules/@compodoc/ngd-core
    - rm -r ui/main/node_modules/ts-simple-ast
    - sonar-scanner
    - docker-compose -f src/main/docker/test-environment/docker-compose.yml down
    - cd config/docker
    - "./docker-compose.sh"
    - cd ../../bin
    - "./waitForOpfabToStart.sh"
    - cd ../src/test/api/karate
    - "./launchAll.sh"
    - cd ../../../../config/docker
    - docker-compose down
    - "./docker-compose-cypress.sh"
    - cd ../../bin
    - "./waitForOpfabToStart.sh"
    - cd $OF_HOME
    - "./gradlew runCypressTests"
    - cd ./config/docker
    - docker-compose down
  - stage: doc
    script:
    - "./gradlew --build-cache generateSwaggerUI asciidoctor"
    - "./CICD/travis/upload_doc.sh"
  - stage: doc-latest
    script:
    - "./gradlew --build-cache generateSwaggerUI asciidoctor"
    - "./CICD/travis/upload_doc.sh --updateLatest true"
  - stage: doc-dry-run
    script:
    - "./gradlew --build-cache generateSwaggerUI asciidoctor"
  - stage: docker-push-version
    script:
    - echo preparing images for version $OF_VERSION
    - echo "$DOCKERHUB_PWD" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - "./gradlew --build-cache copyWorkingDir dockerPush${OF_VERSION} -x test"
    - docker image ls -a|grep lfeoperatorfabric
  - stage: docker-push-latest
    script:
    - echo preparing images for version $OF_VERSION
    - echo "$DOCKERHUB_PWD" | docker login -u "$DOCKERHUB_USER" --password-stdin
    - "./gradlew --build-cache copyWorkingDir dockerPushLatest -x test"
    - docker image ls -a|grep lfeoperatorfabric
  - stage: docker-tag-version
    script:
    - echo preparing images for version $OF_VERSION
    - "./gradlew --build-cache copyWorkingDir dockerTag${OF_VERSION} -x test"
    - docker image ls -a|grep lfeoperatorfabric
stages:
- name: test
- name: test-sonar
- name: doc
  if: "((((type = cron OR commit_message =~ ci_documentation) AND branch = develop)
    OR (commit_message =~ ci_documentation AND NOT commit_message =~ ci_latest AND
    branch =~ .+hotfixes$)) AND NOT type = pull_request)"
- name: doc-latest
  if: "(branch = master OR (branch =~ .+hotfixes$ AND commit_message =~ ci_latest))
    AND NOT type = pull_request"
- name: doc-dry-run
  if: "(NOT branch =~ .+hotfixes$) AND (NOT (branch IN (master,develop)) AND commit_message
    =~ ci_documentation)"
- name: docker-push-version
  if: "(((type = cron OR commit_message =~ ci_docker) AND (branch = develop OR branch
    =~ .+hotfixes$)) OR branch = master) AND NOT type = pull_request"
- name: docker-push-latest
  if: branch = master OR (branch =~ .+hotfixes$ AND commit_message =~ ci_latest) AND
    NOT type = pull_request
- name: docker-tag-version
  if: "(branch =~ .+release$) OR (NOT (branch IN (master,develop)) AND commit_message
    =~ ci_docker)"
before_cache:
- rm -f  ${HOME}/.gradle/caches/modules-2/modules-2.lock
- rm -fr ${HOME}/.gradle/caches/*/plugin-resolution/
cache:
  bundler: true
  directories:
  - "${HOME}/.gradle/caches/"
  - "${HOME}/.gradle/wrapper/"
  - "${HOME}/.gradle/dependency-check-data/"
  - ui/main/nodes_modules
  - "${HOME}/.sdkman"
env:
  global:
  - secure: aVAQ1eGsXVAhpJDNJjpBGlzNY6Xpt8aDj9gnWzvyUzWRfARvv0DiRlcewg67o7A4KqH9PBysr8zqZnqwmvipU/l/l/Ee1uzaZZVzPHfnO+qoCM219JTgPyRSXsnTsNibq5WWXESESzsa+RVy+z4HCzlPrGtJ9KmTsrAe/DMXdX0orGUmoLCKVU3odhGea/Tu+XBblOfy4HFPLQFY872fPsyr0btpO7ntFeOfrHHoVqENPloAlYPyecbTzGeXGmT9YWgtL1KmA65US9tMAftaOieN2x541C0CFNzAf+B9mzKBf9CpEeL/froCLJVDw+0Mcu2mFZAq4wGFsdImDZT5TvvS6HcStYMJeEvHo3Np/f/52NBqpJyW4DIMs8n+McooWBpwHttzc2Jl6cuQcW8HcTjwn9jpSyTCS+uRsFnTl1C6KccosEUQMyYrXkgx7JkuYwcQeihkTZSAuLZRS1HgP79ZRSnL1/qsZW12GCTxSPmEyiE4jGgjRS63aDqlxK74l85FgU34jP7XIBxt/HnJSto8AxBY9qVb970rWPNFLq8JD/d0nSDbsnPqQu6hE4DRgHg3OzEQcw8qSV4rt3PXRFAtood1VuNKz7l7RLA9ob6UXWU5uo7bWsXTbFEfjCIrlYilKmgCHO/+ekiSg5BzsPEz930mpPR6nbTLmiHSUnA=
  - secure: BviW4Kv6l/bAvk52ago5YrBqqvrLj0r1nhX05dviyBaJbkY3Uok6dvw8TK+ENJvi9LDI5UMP79YG9qRru81rlxcJtaJesel7ou5C+RgK1yhrALZrEuWcZPp1wtcPjW6tPZ+tXVqOFovEQZtmbbRJSD8qWroiTZ0v/PjSjqC/LGPUwk/oMTb2NoNaGzXvjsUfq9vI13DyGl4MRpMr4QkymzjQcO9KhvPk5KCMitQ6WPuY6tpfI61RTLZhswqZmIGFg+fHoM8QscTzP593GsET9vw/0WmDanR0dAOiK8B0TEsd5XLIj99UWl/EWii9hTuklJ86lITeuGQE1e9h8M6UOUIVi7xcgeEzaU+yZKx3eFYFw4WzTfGISo2qi3vydSLmLP9E0hrSPTriqnHOsd1XBNpAIXin1tizYwhoM2RaUcqkuWAcYkD4uIvwUGFrftlYyRgH9eBnQ6MD3O3qIxDmcF291Mg55a0ODLuPQ+xI8AxezIh5/FyzEm4of7IXOncdMCbfhZFHesiWfrGSEbcKIO9BH4Jc7sVBUJZ415t9kpmdByVHvsf3w4xhUMrLinAKdswuOusSHdnwEYBvRH9bFVOIUfxkzdhxuti6f2RAXIx4gjcpUvzQWVasiUaX/yhxNRUdfUJgaEGKQB4vx/K9h4g+FTDSemJS90zJkywjdvo=
